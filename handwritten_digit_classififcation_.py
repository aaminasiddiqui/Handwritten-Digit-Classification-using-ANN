# -*- coding: utf-8 -*-
"""Handwritten_digit_classififcation .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11OckxPmHVHWHERCBcqZ7qH7-sYkIBeoz
"""

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense,Flatten

(X_train,y_train),(X_test,y_test)=keras.datasets.mnist.load_data()
# splitting the directy loaded data into train and test

X_test.shape
# 10000 pictures with 28 * 28 pixel resolution each

X_train.shape

y_train.shape

y_train

y_test

import matplotlib.pyplot as plt
plt.imshow(X_test[2])

#scaling
#before: pixel values range from 0 to 255
#after: pixel values range from 0/255 to 255/255 i.e. 0 - 1
#hence std deviation is significantly reduced
#otherwise there is difficulty in converging weights and biases
X_train=X_train/255
X_test=X_test/255

#first dimention i.e X_train[0][y][z]
X_train[0]

#model
model=Sequential()

model.add(Flatten(input_shape=(28,28)))
#Flatten-converts higher dimension array to 1D
#no weights or biases from this layer
model.add(Dense(128, activation='relu')) #28*28*128+128=100480
model.add(Dense(32, activation='relu')) #128*32+32=4128
model.add(Dense(10,activation='softmax')) #32*10+3=330

model.summary()

model.compile(loss='sparse_categorical_crossentropy', optimizer='Adam',metrics=['accuracy'])

history = model.fit(X_train,y_train,epochs=25,validation_split=0.2)
#stores every epoch's metrics -> needed to plot loss and accuracy graphs
#validation_split sets apart 20% data from training(fitting) for validation of model in future

y_prob=model.predict(X_test)

y_pred=y_prob.argmax(axis=1)

from sklearn.metrics import accuracy_score
accuracy_score(y_test,y_pred)

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])

plt.imshow(X_test[9999])

model.predict(X_test[9999].reshape(1,28,28)). argmax(axis=1)
#reshape array of size 784 into shape (1,28,28) -> lower dimention to higher